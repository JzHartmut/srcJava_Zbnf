apply plugin: 'java'
                                                                
version='2020-03-14'


//sourceSets {
//  external {
//    java {
//      srcDir "$projectDir/."
//      include "xxxsrc/mainxxx/java/org/vishia/checkDeps_C/CheckDeps.java"
//    }
//  }
//  main {                                             
//    java {
//      compileClasspath += external.classes
//    }                                                             
//  }                                                  
//}
//



dependencies {
  implementation files('libs/junit-platform-console-standalone-1.6.0.jar')
}



sourceSets {
    main {
         java {
            srcDirs = ['src/main/java']
            //java = 'org/vishia/checkDeps_C/CheckDeps.java'
         }                                       
    }

    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

                              
task jcc_minisys(type: Exec) {
  outputs.dir('build/minisys/bin');
  executable "javac"
  args "-d", "build/minisys/bin", "-sourcepath", "src/main/java", "src/main/java/org/vishia/minisys/*.java" 
  doLast {
    ant.touch( pattern:"2020-01-01") { fileTree(dir: 'build/minisys/bin' , include: '**/*.class') } //{fileset( dir:'build/minisys/bin') { include(name: '**/*.class')} }
  }
}

//task timestampclassfiles_minisys(type: Exec) {
//  dependsOn jcc_minisys
//}


task jar_minisys(type: Exec) {
  dependsOn jcc_minisys
  //dependsOn timestampclassfiles_minisys
  executable "jar"
  args "-cvfm", "build/minisys_vishia.jar", "src/main/jarmanifest/minisys.manifest", "-C", "build/minisys/bin", "." 
}

                                               
jar {                                                
  //source('org.vishia.checkDeps_C.CheckDeps.java')
  manifest {                                                 
      attributes 'Main-Class': 'org.vishia.jztxtcmd.JZtxtcmd'
   }
}



task srcZip(type: Zip) {
    archiveFileName = 'vishiaBase-'+version+'-source.zip'
    //destinationDirectory = file("$buildDir/libs")
    destinationDirectory = file("libs")

    from "src/main/java"
}


task copyJar(type:Exec) {
  dependsOn jar
  dependsOn srcZip
  dependsOn jar_minisys
  commandLine 'cmd', '/c', 'copy', 'build\\libs\\cmpnJava_vishiaBase-'+version+'.jar', 'libs'
  commandLine 'cmd', '/c', 'copy', 'build\\libs\\cmpnJava_vishiaBase-'+version+'.jar', 'libs\\vishiaBase.jar'
  commandLine 'cmd', '/c', 'copy', 'build\\libs\\cmpnJava_vishiaBase-'+version+'.jar', 'libs\\vishiaBase-'+version+'.jar'
  commandLine 'cmd', '/c', 'copy', 'build\\minisys_vishia.jar', 'libs'
}

test {                                                                                                 
  dependsOn copyJar
  testLogging.showStandardStreams = true
  useJUnitPlatform {
    includeTags 'teststd'
    includeTags 'simple'
  }
}




// sourceSets {
//  main {
//    java {
//      exclude 'org.vishia.*'
//      'org.vishia.checkDeps_C.CheckDeps.java'             
//    }                                                      
//  }                                                                
//}
//

//copies the sources to one jar file, named PROJECT-sources.jar
//task sourcesJar(type: Jar, dependsOn: classes) {
//    classifier = 'sources'
//    from sourceSets.main.allSource
//}

//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
////    from javadoc.destinationDir
//}

//artifacts {
//    archives sourcesJar
//    archives javadocJar
//}

//defaultTask 'test'


